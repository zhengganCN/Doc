一、获取Git仓库
    1、两种取得Git项目仓库的方法
        第一种是在现有项目或目录下导入所有文件到Git中；
        第二种是从一个服务器克隆一个现有的Git仓库。
    2、第一种：在现有目录中初始化仓库
        git init（该命令将创建一个名为 .git 的子目录，这个子目录含有你初始化的 Git 仓库中
    所有的必须文件，这些文件是 Git 仓库的骨干。 但是，在这个时候，我们仅仅是做了一个初始化
    的操作，你的项目里的文件还没有被跟踪。）
        git add *.*（实现对指定文件的跟踪）
        git add LICENSE
        git commit -m 'initial project version'（提交）
    3、第二种：克隆现有仓库
        git clone [url] 例子：git clone https://github.com/libgit2/libgit2 
        这会在当前目录下创建一个名为 “libgit2” 的目录，并在这个目录下初始化一个 .git 文件夹，
    从远程仓库拉取下所有数据放入 .git 文件夹，然后从中读取最新版本的文件的拷贝。 如果你进入到
    这个新建的 libgit2 文 件夹，你会发现所有的项目文件已经在里面了，准备就绪等待后续的开发和
    使用。如果你想在克隆远程仓库的时候，自定义本地仓库的名字，你可以使用如下命令：
        git clone https://github.com/libgit2/libgit2 mylibgit 

二、记录每次更新到仓库
    1：检查当前文件状态
        git status
    2：跟踪新文件
        git add XXX.XXX  例子：git add test.txt
    3：暂存已修改文件
        git add（这是个多功能命令：可以用它开始跟踪新文件，或者把已跟踪的文件放到暂存区，还能
    用于合并时把有冲突的文件标记为已解决状态等。 ）

三、忽略文件
    1、有些文件无需纳入 Git 的管理，也不希望它们总出现在未跟踪文件列表。 通常都是些自动生成的文
    件，比如日志文件，或者编译过程中创建的临时文件等。在这种情况下，我们可以创建一个名为.gitignore
    的文件，列出要忽略的文件模式。 

四、提交更新
    git commit 

五、跳过使用暂存区域
    git commit -a（Git就会自动把所有已经跟踪过的文件暂存起来一并提交）

六、移除文件
    git rm xxx.xxx 例子：git rm test.txt
        
七、查看提交历史
    git log